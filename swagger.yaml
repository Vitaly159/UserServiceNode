openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /api/users:
    post:
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Ошибка валидации данных
        '500':
          description: Внутренняя ошибка сервера
    get:
      summary: Получить список всех пользователей
      responses:
        '200':
          description: Массив пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Внутренняя ошибка сервера
  /api/users/{id}:
    get:
      summary: Получить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ с данными пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
    put:
      summary: Обновить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Пользователь обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Ошибка валидации
        '404':
          description: Пользователь не найден
        '500':
          description: Ошибка при обновлении
    delete:
      summary: Удалить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Пользователь удален
        '404':
          description: Пользователь не найден
        '500':
          description: Ошибка при удалении
  /api/users/email/{email}:
    get:
      summary: Получить пользователя по email
      parameters:
        - name: email
          in: path
          required: true
          description: Email пользователя
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFull'
        '404':
          description: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        secondName:
          type: string
        roleId:
          type: integer
    UserCreate:
      type: object
      required:
        - email
        - firstName
        - secondName
        - roleId
        - password
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        secondName:
          type: string
        roleId:
          type: integer
        password:
          type: string
          minLength: 8
          maxLength: 20
    UserFull:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        secondName:
          type: string
        roleId:
          type: integer
        password:
          type: string
        isActive:
          type: boolean
tags: []
